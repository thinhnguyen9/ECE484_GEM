import numpy as np

class WayPoints():
    def __init__(self):
        self.pos_list1 = np.array([
            [0, 0],
            [20.0000,         0],
            [20.8716,    0.0381],
            [21.7365,    0.1519],
            [22.5882,    0.3407],
            [23.4202,    0.6031],
            [24.2262,    0.9369],
            [25.0000,    1.3397],
            [25.7358,    1.8085],
            [26.4279,    2.3396],
            [27.0711,    2.9289],
            [27.660,    3.5721],
            [28.1915,    4.2642],
            [28.6603,    5.0000],
            [29.0631,    5.7738],
            [29.3969,    6.5798],
            [29.6593,    7.4118],
            [29.8481,    8.2635],
            [29.9619,    9.1284],
            [30.0000,   10.0000],
            [29.9619,   10.8716],
            [29.8481,   11.7365],
            [29.6593,   12.5882],
            [29.3969,   13.4202],
            [29.0631,   14.2262],
            [28.6603,   15.0000],
            [28.1915,   15.7358],
            [27.6604,   16.4279],
            [27.0711,   17.0711],
            [26.4279,   17.6604],
            [25.7358,   18.1915],
            [25.0000,   18.6603],
            [24.2262,   19.0631],
            [23.4202,   19.3969],
            [22.5882,   19.6593],
            [21.7365,   19.8481],
            [20.8716,   19.9619],
            [20.0000,   20.0000],
            [19.1318,   19.9240],
            [18.2899,   19.6985],
            [17.5000,   19.3301],
            [16.7861,   18.8302],
            [16.1698,   18.2139],
            [15.6699,   17.5000],
            [15.3015,   16.7101],
            [15.0760,   15.8682],
            [15.0000,   15.0000],
            [15.0760,   14.1318],
            [15.3015,   13.2899],
            [15.6699,   12.5000],
            [16.1698,   11.7861],
            [16.7861,   11.1698],
            [17.5000,   10.6699],
            [18.2899,   10.3015],
            [19.1318,   10.0760],
            [20.0000,   10.0000]
        ])

        self.pos_list2 = np.array([
            [0, 0],
            [20, 0],
            [20.4358,    0.0190],
            [20.8682,    0.0760],
            [21.2941,    0.1704],
            [21.7101,    0.3015],
            [22.1131,    0.4685],
            [22.5000,    0.6699],
            [22.8679,    0.9042],
            [23.2139,    1.1698],
            [23.5355,    1.4645],
            [23.8302,    1.7861],
            [24.0958,    2.1321],
            [24.3301,    2.5000],
            [24.5315,    2.8869],
            [24.6985,    3.2899],
            [24.8296,    3.7059],
            [24.9240,    4.1318],
            [24.9810,    4.5642],
            [25.0000,    5.0000],
            [24.9810,    5.4358],
            [24.9240,    5.8682],
            [24.8296,    6.2941],
            [24.6985,    6.7101],
            [24.5315,    7.1131],
            [24.3301,    7.5000],
            [24.0958,    7.8679],
            [23.8302,    8.2139],
            [23.5355,    8.5355],
            [23.2139,    8.8302],
            [22.8679,    9.0958],
            [22.5000,    9.3301],
            [22.1131,    9.5315],
            [21.7101,    9.6985],
            [21.2941,    9.8296],
            [20.8682,    9.9240],
            [20.4358,    9.9810],
            [20.0000,   10.0000],
            [19.5642,    9.9810],
            [19.1318,    9.9240],
            [18.7059,    9.8296],
            [18.2899,    9.6985],
            [17.8869,    9.5315],
            [17.5000,    9.3301],
            [17.1321,    9.0958],
            [16.7861,    8.8302],
            [16.4645,    8.5355],
            [16.1698,    8.2139],
            [15.9042,    7.8679],
            [15.6699,    7.5000],
            [15.4685,    7.1131],
            [15.3015,    6.7101],
            [15.1704,    6.2941],
            [15.0760,    5.8682],
            [15.0190,    5.4358],
            [15.0000,    5.0000],
            [14.9810,    4.5642],
            [14.9240,    4.1318],
            [14.8296,    3.7059],
            [14.6985,    3.2899],
            [14.5315,    2.8869],
            [14.3301,    2.5000],
            [14.0958,    2.1321],
            [13.8302,    1.7861],
            [13.5355,    1.4645],
            [13.2139,    1.1698],
            [12.8679,    0.9042],
            [12.5000,    0.6699],
            [12.1131,    0.4685],
            [11.7101,    0.3015],
            [11.2941,    0.1704],
            [10.8682,    0.0760],
            [10.4358,    0.0190],
            [10.0000,         0],
            [9.1284,    0.0381],
            [8.2635,    0.1519],
            [7.4118,    0.3407],
            [6.5798,    0.6031],
            [5.7738,    0.9369],
            [5.0000,    1.3397],
            [4.2642,    1.8085],
            [3.5721,    2.3396],
            [2.9289,    2.9289],
            [2.3396,    3.5721],
            [1.8085,    4.2642],
            [1.3397,    5.0000],
            [0.9369,    5.7738],
            [0.6031,    6.5798],
            [0.3407,    7.4118],
            [0.1519,    8.2635],
            [0.0381,    9.1284],
            [0,   10.0000]
        ])

        self.pos_list3 = np.array([
            [0, 0],
            [1, 0],
            [2, 0],
            [3, 0],
            [4, 0],
            [5, 0],
            [6, 0],
            [7, 0],
            [8, 0],
            [9, 0],
            [10, 0],
            [11, 0],
            [12, 0],
            [13, 0],
            [14, 0],
            [15, 0],
            [16, 0],
            [17, 0],
            [18, 0],
            [19, 0],
            [20, 0],
            [21, 0],
            [22, 0],
            [23, 0],
            [24, 0],
            [25, 0],
            [26, 0],
            [27, 0],
            [28, 0],
            [29, 0],
            [30, 0],
            [31, 0],
            [32, 0],
            [33, 0],
            [34, 0],
            [35, 0],
            [36, 0],
            [37, 0],
            [38, 0],
            [39, 0],
            [40, 0],
            [41, 0],
            [42, 0],
            [43, 0],
            [44, 0],
            [45, 0],
            [46, 0],
            [47, 0],
            [48, 0],
            [49, 0],
            [50, 0],
            [50.4358, -0.019],
            [50.8682, -0.076],
            [51.2941, -0.1704],
            [51.7101, -0.3015],
            [52.1131, -0.4685],
            [52.5, -0.6699],
            [52.8679, -0.9042],
            [53.2139, -1.1698],
            [53.5355, -1.4645],
            [53.8302, -1.7861],
            [54.0958, -2.1321],
            [54.3301, -2.5],
            [54.5315, -2.8869],
            [54.6985, -3.2899],
            [54.8296, -3.7059],
            [54.924, -4.1318],
            [54.981, -4.5642],
            [55, -5],
            [54.981, -5.4358],
            [54.924, -5.8682],
            [54.8296, -6.2941],
            [54.6985, -6.7101],
            [54.5315, -7.1131],
            [54.3301, -7.5],
            [54.0958, -7.8679],
            [53.8302, -8.2139],
            [53.5355, -8.5355],
            [53.2139, -8.8302],
            [52.8679, -9.0958],
            [52.5, -9.3301],
            [52.1131, -9.5315],
            [51.7101, -9.6985],
            [51.2941, -9.8296],
            [50.8682, -9.924],
            [50.4358, -9.981],
            [50, -10],
            [49, -10],
            [48, -10],
            [47, -10],
            [46, -10],
            [45, -10],
            [44, -10],
            [43, -10],
            [42, -10],
            [41, -10],
            [40, -10],
            [39, -10],
            [38, -10],
            [37, -10],
            [36, -10],
            [35, -10],
            [34, -10],
            [33, -10],
            [32, -10],
            [31, -10],
            [30, -10],
            [29, -10],
            [28, -10],
            [27, -10],
            [26, -10],
            [25, -10],
            [24, -10],
            [23, -10],
            [22, -10],
            [21, -10],
            [20, -10],
            [19, -10],
            [18, -10],
            [17, -10],
            [16, -10],
            [15, -10],
            [14, -10],
            [13, -10],
            [12, -10],
            [11, -10],
            [10, -10],
            [9, -10],
            [8, -10],
            [7, -10],
            [6, -10],
            [5, -10],
            [4, -10],
            [3, -10],
            [2, -10],
            [1, -10],
            [0, -10],
            [-0.4358, -9.981],
            [-0.8682, -9.924],
            [-1.2941, -9.8296],
            [-1.7101, -9.6985],
            [-2.1131, -9.5315],
            [-2.5, -9.3301],
            [-2.8679, -9.0958],
            [-3.2139, -8.8302],
            [-3.5355, -8.5355],
            [-3.8302, -8.2139],
            [-4.0958, -7.8679],
            [-4.3301, -7.5],
            [-4.5315, -7.1131],
            [-4.6985, -6.7101],
            [-4.8296, -6.2941],
            [-4.924, -5.8682],
            [-4.981, -5.4358],
            [-5, -5],
            [-4.981, -4.5642],
            [-4.924, -4.1318],
            [-4.8296, -3.7059],
            [-4.6985, -3.2899],
            [-4.5315, -2.8869],
            [-4.3301, -2.5],
            [-4.0958, -2.1321],
            [-3.8302, -1.7861],
            [-3.5355, -1.4645],
            [-3.2139, -1.1698],
            [-2.8679, -0.9042],
            [-2.5, -0.6699],
            [-2.1131, -0.4685],
            [-1.7101, -0.3015],
            [-1.2941, -0.1704],
            [-0.8682, -0.076],
            [-0.4358, -0.019],
            [0, 0]
        ])

    def getWayPoints(self, option):
        if option == 1:
            return self.pos_list1
        elif option == 2:
            return self.pos_list2
        elif option == 3:
            return self.pos_list3
    